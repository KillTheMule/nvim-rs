var searchIndex = new Map(JSON.parse('[\
["linebuffercrash_as",{"doc":"","t":"H","n":["main"],"q":[[0,"linebuffercrash_as"]],"d":[""],"i":[0],"f":"{{}b}","c":[],"p":[[1,"unit"]],"b":[]}],\
["nvim_rs",{"doc":"Rust library for Neovim clients","t":"PPPEPPPEPPEPPEEEGENNNNNNNNNNNNQNNCNCCCNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNCCCCNNNNNNNNNNNNNCRKCMHHHHPPGGPPGPPGPPPPPPGPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPEPPEPGCCCFKRNNNNNNNNNNNNNNNKGPPPNNNNHHNNNNMNNNNOOOOOOOOKMPPPPPPPPPPPPPPPPPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Array","Binary","Boolean","Buffer","Ext","F32","F64","Handler","Integer","Map","Neovim","Nil","String","Tabpage","UiAttachOptions","UiOption","Value","Window","as_array","as_bool","as_ext","as_f64","as_i64","as_map","as_ref","as_slice","as_str","as_u64","borrow","borrow_mut","call_args","clone","clone_into","create","eq","error","examples","exttypes","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","impl_exttype_traits","index","index","into","into_val","is_array","is_bin","is_bool","is_ext","is_f32","is_f64","is_i64","is_map","is_nil","is_number","is_str","is_u64","neovim","neovim_api","neovim_api_manual","rpc","to_owned","to_string","try_from","try_into","try_unpack","try_unpack","try_unpack","try_unpack","try_unpack","try_unpack","try_unpack","try_unpack","type_id","uioptions","Handle","Spawner","async_std","spawn","unbuffered_stdout","new_parent","new_path","new_tcp","BufferError","BufferError","CallError","DecodeError","DecodeError","DecodeError","EncodeError","InternalReceiveError","InternalSendResponseError","InvalidMessage","InvalidMessage","InvalidMsgid","InvalidNotificationName","InvalidParams","InvalidRequestName","InvalidType","LoopError","MsgidNotFound","NeovimError","NotAnArray","ReaderError","SendError","UnknownMessageType","WriterError","WrongArrayLength","WrongValueType","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","is_channel_closed","is_channel_closed","is_reader_error","source","source","source","source","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","handler_drop","quitting","scorched_earth","scorched_earth_as","Buffer","Tabpage","Window","add_highlight","attach","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_highlight","clear_namespace","clone","clone","clone","clone_into","clone_into","clone_into","close","create_user_command","del_extmark","del_keymap","del_mark","del_user_command","del_var","del_var","del_var","delete","detach","eq","eq","eq","from","from","from","get_buf","get_changedtick","get_commands","get_config","get_cursor","get_extmark_by_id","get_extmarks","get_height","get_keymap","get_lines","get_mark","get_name","get_number","get_number","get_number","get_offset","get_option","get_option","get_position","get_tabpage","get_text","get_value","get_value","get_value","get_var","get_var","get_var","get_width","get_win","hide","into","into","into","into_val","into_val","into_val","is_loaded","is_valid","is_valid","is_valid","line_count","list_wins","new","new","new","set_buf","set_config","set_cursor","set_extmark","set_height","set_hl_ns","set_keymap","set_lines","set_mark","set_name","set_option","set_option","set_text","set_var","set_var","set_var","set_virtual_text","set_width","set_win","text_height","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Neovim","borrow","borrow_mut","call","call_atomic","call_dict_function","call_function","chan_send","clear_autocmds","clone","clone_into","cmd","command","command_output","complete_set","create_augroup","create_autocmd","create_buf","create_namespace","create_user_command","del_augroup_by_id","del_augroup_by_name","del_autocmd","del_current_line","del_keymap","del_mark","del_user_command","del_var","echo","eq","err_write","err_writeln","eval","eval_statusline","exec","exec2","exec_autocmds","exec_lua","execute_lua","feedkeys","from","get_all_options_info","get_api_info","get_autocmds","get_chan_info","get_color_by_name","get_color_map","get_commands","get_context","get_current_buf","get_current_line","get_current_tabpage","get_current_win","get_hl","get_hl_by_id","get_hl_by_name","get_hl_id_by_name","get_hl_ns","get_keymap","get_mark","get_mode","get_namespaces","get_option","get_option_info","get_option_info2","get_option_value","get_proc","get_proc_children","get_runtime_file","get_var","get_vvar","input","input_mouse","into","list_bufs","list_chans","list_runtime_paths","list_tabpages","list_uis","list_wins","load_context","new","notify","open_term","open_win","out_write","parse_cmd","parse_expression","paste","put","quit_no_save","replace_termcodes","select_popupmenu_item","set_client_info","set_current_buf","set_current_dir","set_current_line","set_current_tabpage","set_current_win","set_decoration_provider","set_hl","set_hl_ns","set_hl_ns_fast","set_keymap","set_option","set_option_value","set_var","set_vvar","strwidth","subscribe","to_owned","try_from","try_into","type_id","ui_attach","ui_detach","ui_pum_set_bounds","ui_pum_set_height","ui_set_focus","ui_set_option","ui_term_event","ui_try_resize","ui_try_resize_grid","unsubscribe","Array","Binary","Boolean","Ext","F32","F64","Integer","IntoVal","Map","Nil","RpcMessage","String","Value","handler","model","unpack","Dummy","Handler","Writer","borrow","borrow_mut","clone","clone_into","default","from","handle_notify","handle_request","into","new","spawn","to_owned","try_from","try_into","type_id","IntoVal","RpcMessage","RpcNotification","RpcRequest","RpcResponse","borrow","borrow_mut","clone","clone_into","decode","encode","eq","fmt","from","into","into_val","to_owned","try_from","try_into","type_id","error","method","method","msgid","msgid","params","params","result","TryUnpack","try_unpack","ExtCmdline","ExtHlstate","ExtLinegrid","ExtMessages","ExtMultigrid","ExtPopupmenu","ExtTabline","ExtTermcolors","ExtWildmenu","Override","Rgb","StdinFd","StdinTty","StdoutTty","TermBackground","TermColors","TermName","UiAttachOptions","UiOption","borrow","borrow","borrow_mut","borrow_mut","default","from","from","into","into","new","set_cmdline_external","set_hlstate_external","set_linegrid_external","set_messages_externa","set_multigrid_external","set_override","set_popupmenu_external","set_rgb","set_stdin_fd","set_stdin_tty","set_stdout_tty","set_tabline_external","set_term_background","set_term_colors","set_term_name","set_termcolors_external","set_wildmenu_external","to_value_map","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"nvim_rs"],[98,"nvim_rs::create"],[103,"nvim_rs::create::async_std"],[106,"nvim_rs::error"],[193,"nvim_rs::examples"],[197,"nvim_rs::exttypes"],[310,"nvim_rs::neovim"],[434,"nvim_rs::rpc"],[450,"nvim_rs::rpc::handler"],[468,"nvim_rs::rpc::model"],[488,"nvim_rs::rpc::model::RpcMessage"],[496,"nvim_rs::rpc::unpack"],[498,"nvim_rs::uioptions"],[551,"alloc::vec"],[552,"core::option"],[553,"rmpv"],[554,"core::fmt"],[555,"core::fmt"],[556,"alloc::borrow"],[557,"alloc::string"],[558,"core::convert"],[559,"core::iter::traits::collect"],[560,"core::any"],[561,"core::future::future"],[562,"core::marker"],[563,"std::fs"],[564,"std::io::error"],[565,"async_std::fs::file"],[566,"alloc::boxed"],[567,"async_std::task::join_handle"],[568,"async_std::os::unix::net::stream"],[569,"futures_util::io::split"],[570,"async_std::path::path"],[571,"core::convert"],[572,"async_std::net::tcp::stream"],[573,"async_std::net::addr"],[574,"core::fmt"],[575,"futures_io::if_std"],[576,"core::marker"],[577,"core::pin"],[578,"futures_util::lock::mutex"],[579,"alloc::sync"]],"d":["Array represents a sequence of objects.","Binary extending Raw type represents a byte array.","Boolean represents true or false.","","Extended implements Extension interface: represents a …","A 32-bit floating point number.","A 64-bit floating point number.","","Integer represents an integer.","Map represents key-value pairs of objects.","","Nil represents nil.","String extending Raw type represents a UTF-8 string.","","","","Represents any valid MessagePack value.","","If the <code>Value</code> is an Array, returns the associated vector. …","If the <code>Value</code> is a Boolean, returns the associated bool. …","If the <code>Value</code> is an Ext, returns the associated tuple with …","If the <code>Value</code> is a number, return or cast it to a f64. …","If the <code>Value</code> is an integer, return or cast it to a i64. …","If the <code>Value</code> is a Map, returns the associated vector of …","Converts the current owned Value to a ValueRef.","If the <code>Value</code> is a Binary or a String, returns the …","If the <code>Value</code> is a String, returns the associated str. …","If the <code>Value</code> is an integer, return or cast it to a u64. …","","","Pack the given arguments into a <code>Vec&lt;Value&gt;</code>, suitable for …","","","Functions to spawn a <code>neovim</code> session.","","Errors of nvim-rs.","Examples on how to use <code>nvim-rs</code>.","Buffers, windows, tabpages of neovim","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","A macro to implement trait for the <code>exttypes</code>","","","Calls <code>U::from(self)</code>.","","Returns true if the <code>Value</code> is an Array. Returns false …","Returns true if the <code>Value</code> is a Binary. Returns false …","Returns true if the <code>Value</code> is a Boolean. Returns false …","Returns true if the <code>Value</code> is an Ext. Returns false …","Returns true if (and only if) the <code>Value</code> is a f32. Returns …","Returns true if (and only if) the <code>Value</code> is a f64. Returns …","Returns true if the <code>Value</code> is convertible to an i64. …","Returns true if the <code>Value</code> is a Map. Returns false …","Returns true if the <code>Value</code> is a Null. Returns false …","Returns true if the <code>Value</code> is a Number. Returns false …","Returns true if the <code>Value</code> is a String. Returns false …","Returns true if the <code>Value</code> is convertible to an u64. …","An active neovim session.","The auto generated API for <code>neovim</code>","Some manually implemented API functions","RPC functionality for <code>neovim</code>","","","","","","","","","","","","","","Options for UI implementations","","A task to generalize spawning a future that returns <code>()</code>.","Functions to spawn a <code>neovim</code> session using <code>async-std</code>","","Create a std::io::File for stdout, which is not …","Connect to the neovim instance that spawned this process …","Connect to a neovim instance via unix socket by path. This …","Connect to a neovim instance via tcp","Reading from the internal buffer failed.","Encoding the message into the internal buffer has failed.","A <code>call</code> to neovim failed","Receiving a message from neovim failed","Decoding neovim’s response failed.","Decoding a message failed.","Sending a message to neovim failed","The internal channel to send the response to the right …","Failed to send a Response (from neovim) through the sender …","A message from neovim had an invalid format","Neovim sent a message that’s not valid.","The msgid of a request or response was not decodable into …","The method name of a notification was not decodable into a …","The params of a request or notification weren’t an array","The method name of a request was not decodable into a …","The first array element (=the message type) was not …","A failure in the io loop","A Msgid could not be found in the request queue","Neovim encountered an error while executing the reqest.","The value read was not an array","Reading from the stream failed. This is probably …","Sending the request to neovim has failed.","The first array element (=the message type) was decodable …","Writing the encoded message to the stream failed.","WrongArrayLength(should, is) means that the array should …","The response from neovim contained a <code>Value</code> of the wrong …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determine if the error originated from a closed channel. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>handler_drop</code>","Quitting","Scorched earth","Scorched earth with async-std","A struct representing a neovim buffer. It is specific to a …","A struct representing a neovim tabpage. It is specific to a","A struct representing a neovim window. It is specific to a …","since: 1","since: 4","","","","","","","since: 1","since: 5","","","","","","","since: 6","since: 9","since: 7","since: 6","since: 8","since: 9","since: 1","since: 1","since: 1","since: 7","since: 4","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","since: 1","since: 2","since: 4","since: 6","since: 1","since: 7","since: 7","since: 1","since: 3","since: 1","since: 1","since: 1","since: 1","since: 1","since: 1","since: 5","since: 1","since: 1","since: 1","since: 1","since: 9","Internal value, that represent type","Internal value, that represent type","Internal value, that represent type","since: 1","since: 1","since: 1","since: 1","since: 1","since: 7","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","since: 5","since: 1","since: 1","since: 1","since: 1","since: 1","","","","since: 5","since: 6","since: 1","since: 7","since: 1","since: 10","since: 6","since: 1","since: 8","since: 1","since: 1","since: 1","since: 7","since: 1","since: 1","since: 1","since: 5","since: 1","since: 12","since: 12","","","","","","","","","","","","","An active Neovim session.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Send a quit command to Nvim. The quit command is ‘qa!’ …","","","","","","","","","","","","","","","","","","","","","","","","Register as a remote UI.","","","","","","","","","","Array represents a sequence of objects.","Binary extending Raw type represents a byte array.","Boolean represents true or false.","Extended implements Extension interface: represents a …","A 32-bit floating point number.","A 64-bit floating point number.","Integer represents an integer.","","Map represents key-value pairs of objects.","Nil represents nil.","","String extending Raw type represents a UTF-8 string.","Represents any valid MessagePack value.","Handling notifications and request received from neovim","Decoding and encoding msgpack rpc messages from/to neovim.","Tools to unpack a <code>Value</code> to something we can use.","The dummy handler defaults to doing nothing with a …","The central functionality of a plugin. The trait bounds …","The type where we write our responses to requests. …","","","","","","Returns the argument unchanged.","Handling an rpc notification. Notifications are handled …","Handling an rpc request. The ID’s of requests are …","Calls <code>U::from(self)</code>.","","","","","","","","A msgpack-rpc message, see …","","","","","","","","Continously reads from reader, pushing onto <code>rest</code>. Then …","Encode the given message into the <code>BufWriter</code>. Flushes the …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Trait to allow seamless conversion from a <code>Value</code> to the type","Returns the value contained in <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,1,1,1,0,1,1,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,32,0,0,32,0,0,0,0,54,55,0,0,56,40,0,56,40,0,54,52,52,52,52,52,0,40,56,52,54,56,52,55,52,56,52,54,55,56,40,52,54,55,56,40,52,52,52,52,52,54,54,55,55,56,56,40,40,52,54,55,56,40,52,54,55,56,40,56,40,40,54,55,56,40,52,52,54,55,56,40,52,54,55,56,40,52,54,55,56,40,52,54,55,56,40,0,0,0,0,0,0,0,58,58,58,61,62,58,61,62,58,58,58,61,62,58,61,62,62,58,58,58,58,58,58,61,62,58,58,58,61,62,58,61,62,62,58,58,62,62,58,58,62,58,58,58,58,58,61,62,58,58,62,62,62,58,58,61,62,58,61,62,62,61,62,58,61,62,58,61,62,58,58,61,62,58,61,58,61,62,62,62,62,58,62,62,58,58,58,58,58,62,58,58,61,62,58,62,61,62,58,61,62,58,61,62,58,61,62,58,61,62,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,1,1,1,1,1,1,1,0,1,1,0,1,0,0,0,0,0,0,44,65,65,65,65,65,65,44,44,65,65,65,65,65,65,65,0,0,69,69,69,69,69,69,69,0,0,69,69,69,69,72,69,69,69,69,74,75,76,75,74,75,76,74,0,73,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,77,64,77,64,64,77,64,77,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,77,64,77,64,77,64],"f":"``````````````````{b{{f{{d{b}}}}}}{b{{f{h}}}}{b{{f{{A`{j{n{l}}}}}}}}{b{{f{Ab}}}}{b{{f{Ad}}}}{b{{f{{d{{A`{bb}}}}}}}}{bAf}{b{{f{{n{l}}}}}}{b{{f{Ah}}}}{b{{f{Aj}}}}{ce{}{}}0`{bb}{{ce}Al{}{}}`{{bb}h}```{{bAn}{{Bb{AlB`}}}}0{Bdb}{{{d{l}}}b}{{{Bf{Ah}}}b}{Abb}{{{d{b}}}b}{Bhb}{Bjb}{Blb}{{{Bf{{n{l}}}}}b}{Ajb}{Adb}{Bnb}{C`b}{hb}{{{d{{A`{bb}}}}}b}{Cbb}{lb}{{{n{l}}}b}{Ahb}{cc{}}{jb}{Cdb}{eb{{Cf{b}}}{{Cj{}{{Ch{c}}}}}}`{{bBl}b}{{bAh}b}{ce{}{}}{bb}{bh}00000000000````2{cCd{}}{c{{Bb{e}}}{}{}}0{b{{Bb{hb}}}}{b{{Bb{Adb}}}}{b{{Bb{Alb}}}}{b{{Bb{{d{c}}b}}}{}}{b{{Bb{Cdb}}}}{b{{Bb{{d{{A`{bb}}}}b}}}}{b{{Bb{{A`{AdAd}}b}}}}{b{{Bb{bb}}}}{cCl{}}````{{{D`{}{{Cn{c}}}}e}c{}{{Dd{}{{Db{Al}}}}Df}}{{}{{Dj{Dh}}}}{c{{Dj{{A`{{Dn{Dl}}{Ed{{Bb{Al{Eb{E`}}}}}}}}}}}{{Eh{}{{Ef{Dl}}}}}}{{ce}{{Dj{{A`{{Dn{{El{Ej}}}}{Ed{{Bb{Al{Eb{E`}}}}}}}}}}}{{F`{En}}Fb}{{Eh{}{{Ef{{El{Ej}}}}}}Df}}{{ce}{{Dj{{A`{{Dn{{El{Fd}}}}{Ed{{Bb{Al{Eb{E`}}}}}}}}}}}Ff{{Eh{}{{Ef{{El{Fd}}}}}}}}``````````````````````````{ce{}{}}000000000{FhFh}{{ce}Al{}{}}{{FhFh}h}{{FhAn}{{Bb{AlB`}}}}{{FhAn}Fj}{{FlAn}{{Bb{AlB`}}}}{{FlAn}Fj}{{FnAn}Fj}{{FnAn}{{Bb{AlB`}}}}{{G`An}{{Bb{AlB`}}}}{{G`An}Fj}{{E`An}Fj}{{E`An}{{Bb{AlB`}}}}{cc{}}0000>>>>>{G`h}{E`h}0{Fl{{f{Gb}}}}{Fn{{f{Gb}}}}{G`{{f{Gb}}}}{E`{{f{Gb}}}}{ce{}{}}{cCd{}}0000{c{{Bb{e}}}{}{}}000000000{cCl{}}0000```````{{{Gd{c}}AdAhAdAdAd}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}h{d{{A`{bb}}}}}{{Bb{h{Eb{G`}}}}}{GfDfGh}}555555{{{Gd{c}}AdAdAd}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}0{{{Gd{c}}}{{Gd{c}}}{GfDfGh}}{{{Gj{c}}}{{Gj{c}}}{GfDfGh}}{{{Gl{c}}}{{Gl{c}}}{GfDfGh}}{{ce}Al{}{}}00{{{Gl{c}}h}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}Ahb{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}AdAd}{{Bb{h{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}AhAh}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}Ah}{{Bb{h{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}Ah}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}0{{{Gj{c}}Ah}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}Ah}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}}{{Bb{h{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}{Gd{c}}}h{GfDfGh}}{{{Gj{c}}{Gj{c}}}h{GfDfGh}}{{{Gl{c}}{Gl{c}}}h{GfDfGh}}{cc{}}00{{{Gl{c}}}{{Bb{{Gd{c}}{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}{d{{A`{bb}}}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}}{{Bb{{A`{AdAd}}{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}AdAd{d{{A`{bb}}}}}{{Bb{{d{Ad}}{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}Adbb{d{{A`{bb}}}}}{{Bb{{d{b}}{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}Ah}{{Bb{{d{{d{{A`{bb}}}}}}{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}AdAdh}{{Bb{{d{Cd}}{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}Ah}{{Bb{{A`{AdAd}}{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}}{{Bb{Cd{Eb{G`}}}}}{GfDfGh}}:{{{Gj{c}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}5{{{Gd{c}}Ad}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}Ah}{{Bb{b{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}Ah}{{Bb{b{Eb{G`}}}}}{GfDfGh}};{{{Gl{c}}}{{Bb{{Gj{c}}{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}AdAdAdAd{d{{A`{bb}}}}}{{Bb{{d{Cd}}{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}}b{GfDfGh}}{{{Gj{c}}}b{GfDfGh}}{{{Gl{c}}}b{GfDfGh}}6{{{Gj{c}}Ah}{{Bb{b{Eb{G`}}}}}{GfDfGh}}6>{{{Gj{c}}}{{Bb{{Gl{c}}{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{ce{}{}}00654{{{Gd{c}}}{{Bb{h{Eb{G`}}}}}{GfDfGh}}0{{{Gj{c}}}{{Bb{h{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}}{{Bb{h{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Gj{c}}}{{Bb{{d{{Gl{c}}}}{Eb{G`}}}}}{GfDfGh}}{{b{Dn{c}}}{{Gd{c}}}{GfDfGh}}{{b{Dn{c}}}{{Gj{c}}}{GfDfGh}}{{b{Dn{c}}}{{Gl{c}}}{GfDfGh}}{{{Gl{c}}{Gd{c}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}{A`{AdAd}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}AdAdAd{d{{A`{bb}}}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}Ad}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}0{{{Gd{c}}AhAhAh{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}AdAdh{d{Cd}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}AhAdAd{d{{A`{bb}}}}}{{Bb{h{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}Ah}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}Ahb}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}Ahb}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gd{c}}AdAdAdAd{d{Cd}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}2{{{Gj{c}}Ahb}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}2{{{Gd{c}}AdAd{d{b}}{d{{A`{bb}}}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}9{{{Gj{c}}{Gl{c}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Gl{c}}{d{{A`{bb}}}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{ce{}{}}00{c{{Bb{e}}}{}{}}00000{cCl{}}00`22{{{Dn{c}}Ah{d{b}}}{{Bb{{Bb{bb}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{d{b}}}{{Bb{{d{b}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}bAh{d{b}}}{{Bb{b{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah{d{b}}}{{Bb{b{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}AdAh}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Dn{c}}}{GfDfGh}}{{ce}Al{}{}}{{{Dn{c}}{d{{A`{bb}}}}{d{{A`{bb}}}}}{{Bb{Cd{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah}{{Bb{Cd{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ad{d{{A`{bb}}}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah{d{{A`{bb}}}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}b{d{{A`{bb}}}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}hh}{{Bb{{Gd{c}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ahb{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ad}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}80{{{Dn{c}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}AhAh}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah}{{Bb{h{Eb{G`}}}}}{GfDfGh}};;{{{Dn{c}}{d{b}}h{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{Dn{c}}}h{GfDfGh}}=={{{Dn{c}}Ah}{{Bb{b{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah{d{{A`{bb}}}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ahh}{{Bb{Cd{Eb{G`}}}}}{GfDfGh}}1{{{Dn{c}}b{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah{d{b}}}{{Bb{b{Eb{G`}}}}}{GfDfGh}}0{{{Dn{c}}AhAhh}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{cc{}}{{{Dn{c}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Bb{{d{b}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{d{{A`{bb}}}}}{{Bb{{d{b}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ad}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}4{{{Dn{c}}{d{{A`{bb}}}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}0{{{Dn{c}}}{{Bb{{Gd{c}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Bb{Cd{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Bb{{Gj{c}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Bb{{Gl{c}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ad{d{{A`{bb}}}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Adh}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ahh}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}8{{{Dn{c}}{d{{A`{bb}}}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah}{{Bb{{d{{d{{A`{bb}}}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah{d{{A`{bb}}}}}{{Bb{{d{b}}{Eb{G`}}}}}{GfDfGh}}??{{{Dn{c}}Ah}{{Bb{b{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah{d{{A`{bb}}}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah{d{{A`{bb}}}}}{{Bb{b{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ad}{{Bb{b{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ad}{{Bb{{d{b}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ahh}{{Bb{{d{Cd}}{Eb{G`}}}}}{GfDfGh}}66{{{Dn{c}}Ah}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}AhAhAhAdAdAd}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{ce{}{}}{{{Dn{c}}}{{Bb{{d{{Gd{c}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Bb{{d{b}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Bb{{d{Cd}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Bb{{d{{Gj{c}}}}{Eb{G`}}}}}{GfDfGh}}2{{{Dn{c}}}{{Bb{{d{{Gl{c}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{d{{A`{bb}}}}}{{Bb{b{Eb{G`}}}}}{GfDfGh}}{{ceg}{{A`{Dn{`{{Dd{}{{Db{{Bb{Al{Eb{E`}}}}}}}}}}}}}{GnDfGh}{GfDfGh}{{Eh{}{{Ef{e}}}}D`}}{{{Dn{c}}AhAd{d{{A`{bb}}}}}{{Bb{b{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{Gd{c}}{d{{A`{bb}}}}}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{Gd{c}}h{d{{A`{bb}}}}}{{Bb{{Gl{c}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah{d{{A`{bb}}}}}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}AhAhh}{{Bb{{d{{A`{bb}}}}{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}AhhAd}{{Bb{h{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{d{Cd}}Ahhh}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ahhhh}{{Bb{Cd{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Adhh{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah{d{{A`{bb}}}}Ah{d{{A`{bb}}}}{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{Gd{c}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}99{{{Dn{c}}{Gj{c}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}{Gl{c}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ad{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}AdAh{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ad}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}0{{{Dn{c}}AhAhAh{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ahb}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ahb{d{{A`{bb}}}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}11{{{Dn{c}}Ah}{{Bb{Ad{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}Ah}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{ce{}{}}{c{{Bb{e}}}{}{}}0{cCl{}}{{{Dn{c}}AdAdH`}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}AbAbAbAb}{{Bb{Al{Eb{G`}}}}}{GfDfGh}};{{{Dn{c}}h}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}::{{{Dn{c}}AdAd}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}{{{Dn{c}}AdAdAd}{{Bb{Al{Eb{G`}}}}}{GfDfGh}}9```````````````````88{{{Hb{c}}}{{Hb{c}}}{GfDfHdGh}}{{ce}Al{}{}}{{}{{Hb{c}}}{GfDfHdGhHf}}{cc{}}{{{Eh{}{{Ef{c}}}}Cd{d{b}}{Dn{c}}}{{Hh{{Eb{Dd}}}}}{GfDfGh}}0={{}{{Hb{c}}}{GfDfHdGh}}{{ce}{}{}{{Dd{}{{Db{Al}}}}Df}}?>>=`````??{HjHj}6{{c{d{l}}}{{Bb{Hj{Eb{Fl}}}}}{GnDfGh}}{{{Hn{{Hl{c}}}}Hj}{{Bb{Al{Eb{Fn}}}}}{GfDfGh}}{{HjHj}h}{{HjAn}Fj}8{ce{}{}}{I`c{}}1{c{{Bb{e}}}{}{}}0{cCl{}}`````````{Ib{{Bb{cb}}}{}}```````````````````4444{{}H`}>>550{{H`h}H`}0000000{{H`Aj}H`}111{{H`Ah}H`}1022{H`b}777766","c":[],"p":[[6,"Value",0],[5,"Vec",551],[6,"Option",552],[1,"bool"],[1,"i8"],[1,"u8"],[1,"slice"],[1,"tuple"],[1,"f64"],[1,"i64"],[6,"ValueRef",553],[1,"str"],[1,"u64"],[1,"unit"],[5,"Formatter",554],[5,"Error",554],[6,"Result",555],[1,"i16"],[6,"Cow",556],[1,"u32"],[1,"f32"],[1,"usize"],[1,"i32"],[1,"isize"],[1,"u16"],[5,"String",557],[10,"Into",558],[17,"Item"],[10,"IntoIterator",559],[5,"TypeId",560],[17,"Handle"],[10,"Spawner",98],[17,"Output"],[10,"Future",561],[10,"Send",562],[5,"File",563],[8,"Result",564],[5,"File",565],[5,"Neovim",310],[6,"LoopError",106],[5,"Box",566],[5,"JoinHandle",567],[17,"Writer"],[10,"Handler",450],[5,"UnixStream",568],[5,"WriteHalf",569],[5,"Path",570],[10,"AsRef",558],[10,"Clone",571],[5,"TcpStream",572],[10,"ToSocketAddrs",573],[6,"InvalidMessage",106],[8,"Result",554],[6,"DecodeError",106],[6,"EncodeError",106],[6,"CallError",106],[10,"Error",574],[5,"Buffer",197],[10,"AsyncWrite",575],[10,"Unpin",562],[5,"Tabpage",197],[5,"Window",197],[10,"AsyncRead",575],[5,"UiAttachOptions",498],[5,"Dummy",450],[10,"Sync",562],[10,"Default",576],[5,"Pin",577],[6,"RpcMessage",468],[5,"Mutex",578],[5,"Arc",579],[10,"IntoVal",468],[10,"TryUnpack",496],[15,"RpcResponse",488],[15,"RpcRequest",488],[15,"RpcNotification",488],[6,"UiOption",498]],"b":[[38,"impl-Display-for-Value"],[39,"impl-Debug-for-Value"],[40,"impl-From%3Ci16%3E-for-Value"],[41,"impl-From%3CVec%3Cu8%3E%3E-for-Value"],[42,"impl-From%3CCow%3C\'a,+str%3E%3E-for-Value"],[43,"impl-From%3Cf64%3E-for-Value"],[44,"impl-From%3CVec%3CValue%3E%3E-for-Value"],[45,"impl-From%3Cu32%3E-for-Value"],[46,"impl-From%3Cf32%3E-for-Value"],[47,"impl-From%3Cusize%3E-for-Value"],[48,"impl-From%3CCow%3C\'a,+%5Bu8%5D%3E%3E-for-Value"],[49,"impl-From%3Cu64%3E-for-Value"],[50,"impl-From%3Ci64%3E-for-Value"],[51,"impl-From%3Ci32%3E-for-Value"],[52,"impl-From%3Cisize%3E-for-Value"],[53,"impl-From%3Cbool%3E-for-Value"],[54,"impl-From%3CVec%3C(Value,+Value)%3E%3E-for-Value"],[55,"impl-From%3Cu16%3E-for-Value"],[56,"impl-From%3Cu8%3E-for-Value"],[57,"impl-From%3C%26%5Bu8%5D%3E-for-Value"],[58,"impl-From%3C%26str%3E-for-Value"],[60,"impl-From%3Ci8%3E-for-Value"],[61,"impl-From%3CString%3E-for-Value"],[64,"impl-Index%3Cusize%3E-for-Value"],[65,"impl-Index%3C%26str%3E-for-Value"],[88,"impl-TryUnpack%3Cbool%3E-for-Value"],[89,"impl-TryUnpack%3Ci64%3E-for-Value"],[90,"impl-TryUnpack%3C()%3E-for-Value"],[91,"impl-TryUnpack%3CVec%3CT%3E%3E-for-Value"],[92,"impl-TryUnpack%3CString%3E-for-Value"],[93,"impl-TryUnpack%3CVec%3C(Value,+Value)%3E%3E-for-Value"],[94,"impl-TryUnpack%3C(i64,+i64)%3E-for-Value"],[95,"impl-TryUnpack%3CValue%3E-for-Value"],[145,"impl-Display-for-InvalidMessage"],[146,"impl-Debug-for-InvalidMessage"],[147,"impl-Display-for-DecodeError"],[148,"impl-Debug-for-DecodeError"],[149,"impl-Debug-for-EncodeError"],[150,"impl-Display-for-EncodeError"],[151,"impl-Display-for-CallError"],[152,"impl-Debug-for-CallError"],[153,"impl-Debug-for-LoopError"],[154,"impl-Display-for-LoopError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
